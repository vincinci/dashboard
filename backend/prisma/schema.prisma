// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                          String   @id @default(uuid())
  email                       String   @unique
  password                    String
  displayName                 String
  businessName                String?
  businessAddress             String?
  phoneNumber                 String?
  nationalIdDocument          String?  // Base64 encoded file data
  businessRegistrationDocument String? // Base64 encoded file data
  legalDeclaration            Boolean  @default(false)
  isAdmin                     Boolean  @default(false)  // Admin flag
  documentsVerified           Boolean  @default(false)  // Admin-verified documents
  resetPasswordToken          String?
  resetPasswordExpires        DateTime?
  createdAt                   DateTime @default(now())
  updatedAt                   DateTime @updatedAt
  
  // Relations
  products                    Product[]
  shopifyConnections          ShopifyConnection[]
}

model Product {
  id                String    @id @default(uuid())
  name              String
  description       String
  price             Float
  category          String
  quantity          Int       @default(0)
  sku               String?
  status            String    @default("active")
  images            String[]  @default([])  // Array of image URLs - changed from String? to String[]
  delivery          Boolean   @default(false)
  pickup            String?   // Pickup location
  sizes             String?   // JSON string array of available sizes
  colors            String?   // JSON string array of available colors
  vendorId          String
  shopifyProductId  String?   // Shopify product ID when synced
  lastSyncedAt      DateTime? // Last time product was synced to Shopify
  isVerified        Boolean   @default(false)  // Admin verification status
  isApprovedForShopify Boolean @default(false) // Admin approval for Shopify sync
  adminNotes        String?   // Admin notes about verification/approval
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  // Relations
  vendor            User      @relation(fields: [vendorId], references: [id], onDelete: Cascade)
}

model ShopifyConnection {
  id               String    @id @default(uuid())
  adminId          String    // Only admin can have Shopify connection
  shopifyStoreUrl  String    // Store URL without https:// (e.g., mystore.myshopify.com)
  accessToken      String    // Shopify API access token
  storeName        String?   // Friendly store name
  isActive         Boolean   @default(true)
  lastSyncAt       DateTime? // Last time products were synced
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  
  // Relations
  admin            User      @relation(fields: [adminId], references: [id], onDelete: Cascade)
  
  @@unique([adminId]) // One connection per admin
} 